/*
Consegna 1:
Scrivere ed eseguire il codice utile a gestire una relazione di tipo (N:N) creando
3 tabelle ed i relativi vincoli di integrità.

Tabella 1: ft_autore Contiene informazioni sugli autori di libri.
autore_id (INT, PRIMARY KEY)
nome (VARCHAR, non nullo)
nazionalità (VARCHAR)

Tabella 2: ft_libro Contiene informazioni sui libri disponibili.
libro_id (INT, PRIMARY KEY)
titolo (VARCHAR, non nullo)
prezzo (DECIMAL, non nullo)

Tabella 3: ft_autore_libro Gestisce le relazioni tra autori e libri.
autore_id (INT, FOREIGN KEY che fa riferimento a ft_autore.autore_id)
libro_id (INT, FOREIGN KEY che fa riferimento a ft_libro.libro_id)
anno_pubblicazione (YEAR)

Assicurati di gestire le foreign key in modo da garantire l'integrità dei dati tra le tabelle.
*/



/*
Consegna 2:
- Realizzare una VISTA chiamata: v_libri_autore che mostra, per ogni libro, tutti i dettagli dell'autore e tutti i dettagli del libro.
- Realizzare una VISTA chiamata: v_fatturato_autore che mostra, "per ogni autore", il totale fatturato (totale dei prezzi dei libri pubblicati).
*/



/*
Consegna_3 (su architettura ROI_PROJECT):
Realizzare la FUNZIONE: stima_budget() che, passato come parametro in entrata l' id_investimento:
• Legge il valore del budget
• Se tipo_investimento = 'Titoli azionari'
• ricalcola valore budget / 1.2
• invece se tipologia = 'Titoli obbligazionari'
• ricalcola valore budget / 1.3

• restituisce il valore del budget

P.S. La funzione deve gestire la scrittura su tabella monitoraggio_log di:
• quando inizia
• quando termina
• eventuali ECCEZIONI che si verifichino
*/



/*
Consegna_4 (su architettura ROI_PROJECT):
Realizzare la PROCEDURA: calcola_nuovi_budget() che scrive nella tabella: monitoraggio_log per ogni investimento:

• id_investimento
• descrizione_investimento
• stima_del_budget
richiamando la funzione: stima_budget().

P.S. La procedura deve gestire la scrittura su tabella monitoraggio_log di:
• quando inizia
• quando termina
• eventuali ECCEZIONI che si verifichino
*/